{"version":3,"sources":["webpack:///./src/pages/myfiles.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.js"],"names":["MyFiles","_ref","items","data","allFile","edges","map","obj","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","node","relativePath","extension","_components_Header__WEBPACK_IMPORTED_MODULE_2__","textHeader","query","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","Header","props","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","className","to"],"mappings":"gKA0CeA,UArCf,SAAAC,GAA2B,IAGrBC,EAHqBD,EAARE,KAEAC,QAAQC,MACPC,IAAI,SAAAC,GAAG,OAAIC,OAAAC,EAAA,EAAAD,CAAA,UACGA,OAAAC,EAAA,EAAAD,CAAA,UAAKD,EAAIG,KAAKC,cACdH,OAAAC,EAAA,EAAAD,CAAA,UAAKD,EAAIG,KAAKE,cAG9C,OACEJ,OAAAC,EAAA,EAAAD,CAAA,WAEEA,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CAAQC,WAAW,aAEnBN,OAAAC,EAAA,EAAAD,CAAA,aAEEA,OAAAC,EAAA,EAAAD,CAAA,aACEA,OAAAC,EAAA,EAAAD,CAAA,UACEA,OAAAC,EAAA,EAAAD,CAAA,kBACAA,OAAAC,EAAA,EAAAD,CAAA,yBAGJA,OAAAC,EAAA,EAAAD,CAAA,WAGAA,OAAAC,EAAA,EAAAD,CAAA,aACGN,MAcJ,IAAMa,EAAK,kCC5ClB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6HCctBK,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAAxB,GAAiC,IAA9ByB,EAA8BzB,EAA9ByB,SAAUC,EAAoB1B,EAApB0B,cACpC,OAAKA,EAGEJ,IAAMK,cAAcC,IAApBrB,OAAAsB,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,0ECaIC,IAhBf,SAAgBC,GACf,OACCzB,OAAAC,EAAA,EAAAD,CAAA,OAAK0B,GAAG,UACL1B,OAAAC,EAAA,EAAAD,CAAA,UAAMyB,EAAMnB,WAAZ,KACAN,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,KAA1B,aACA7B,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,UAA1B,SACA7B,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,YAA1B,WACA7B,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,WAA1B,UACA7B,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,YAA1B,WACA7B,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,YAA1B,YACA7B,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,UAA1B,iBACA7B,OAAAC,EAAA,EAAAD,CAAC2B,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,eAA1B","file":"component---src-pages-myfiles-js-cc684beb1d65bb1846e3.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Header from '../components/Header'\n\nfunction MyFiles({ data }) {\n\n  let nodos = data.allFile.edges;\n  let items = nodos.map(obj => <tr>\n                                  <th>{obj.node.relativePath}</th>\n                                  <th>{obj.node.extension}</th>\n                               </tr>)\n\n  return (\n    <div>\n\n      <Header textHeader=\"My Files\"/>\n\n      <table>\n\n        <thead>\n          <tr>\n            <th>Path</th>\n            <th>extension</th>\n          </tr>\n        </thead>\n        <tr>\n\n        </tr>\n        <tbody>\n          {items}\n        </tbody>\n\n      </table>\n\n\n\n    </div>\n\n\n  )\n}\nexport default MyFiles\n\nexport const query = graphql`\n  query{\n    allFile{\n      edges{\n        node{\n          relativePath\n          extension\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {Link} from 'gatsby'\nimport './Header.css'\n\nfunction Header(props){\n return(\n  <div id=\"header\">\n     <h1>{ props.textHeader } </h1>\n     <Link className=\"link\" to=\"/\">Index    </Link>\n     <Link className=\"link\" to=\"/about\">About</Link>\n     <Link className=\"link\" to=\"/contact\">Contact</Link>\n     <Link className=\"link\" to=\"/pandas\">Pandas</Link>\n     <Link className=\"link\" to=\"/graphql\">Graphql</Link>\n     <Link className=\"link\" to=\"/myfiles\">My Files</Link>\n     <Link className=\"link\" to=\"/seeMD\">See MarkDowns</Link>\n     <Link className=\"link\" to=\"/miMarkDown\">MarkDown Page</Link>\n  </div>\n )\n}\n\nexport default Header;"],"sourceRoot":""}