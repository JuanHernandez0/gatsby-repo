{"version":3,"sources":["webpack:////home/name/Escritorio/hello-world/src/pages/seeMD.js","webpack:////home/name/Escritorio/hello-world/.cache/public-page-renderer.js","webpack:////home/name/Escritorio/hello-world/.cache/gatsby-browser-entry.js","webpack:////home/name/Escritorio/hello-world/.cache/public-page-renderer-prod.js","webpack:////home/name/Escritorio/hello-world/src/components/Header.js"],"names":["__webpack_exports__","_ref","data","items","allMarkdownRemark","edges","map","obj","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","key","node","id","style","border","frontmatter","title","excerpt","date","_components_Header__WEBPACK_IMPORTED_MODULE_2__","textHeader","totalCount","query","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","Header","props","gatsby__WEBPACK_IMPORTED_MODULE_2__","className","to"],"mappings":"gKAKeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAGZC,EADQD,EAAKE,kBAAkBC,MACjBC,IAAK,SAAAC,GACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,OAAKE,IAAKH,EAAII,KAAKC,GAAIC,MAAS,CAACC,OAAQ,oBACtCN,OAAAC,EAAA,EAAAD,CAAA,cAAMD,EAAII,KAAKI,YAAYC,MAA3B,KACAR,OAAAC,EAAA,EAAAD,CAAA,cAAMD,EAAII,KAAKM,QAAf,KACAT,OAAAC,EAAA,EAAAD,CAAA,cAAMD,EAAII,KAAKI,YAAYG,KAA3B,QAI7B,OACIV,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,CAAQC,WAAW,aACnBZ,OAAAC,EAAA,EAAAD,CAAA,iEACEA,OAAAC,EAAA,EAAAD,CAAA,UAAKN,EAAKE,kBAAkBiB,WAA5B,UACClB,IAKJ,IAAMmB,EAAK,kCC1BlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6HCctBK,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAA/B,GAAiC,IAA9BgC,EAA8BhC,EAA9BgC,SAAUC,EAAoBjC,EAApBiC,cACpC,OAAKA,EAGEJ,IAAMK,cAAcC,IAApB5B,OAAA6B,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,0ECaIC,IAhBf,SAAgBC,GACf,OACChC,OAAAC,EAAA,EAAAD,CAAA,OAAKI,GAAG,UACLJ,OAAAC,EAAA,EAAAD,CAAA,UAAMgC,EAAMpB,WAAZ,KACAZ,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,KAA1B,aACAnC,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,UAA1B,SACAnC,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,YAA1B,WACAnC,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,WAA1B,UACAnC,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,YAA1B,WACAnC,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,YAA1B,YACAnC,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,UAA1B,iBACAnC,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,eAA1B","file":"component---src-pages-see-md-js-397a7230ce6003d5dcb0.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Header from '../components/Header'\n\nexport default ({ data }) => {\n\n  var nodos = data.allMarkdownRemark.edges\n  var items = nodos.map( obj =>  {\n                     return <div key={obj.node.id} style={  {border: \"1px solid black\"}} >\n                               <h2> {obj.node.frontmatter.title} </h2>\n                               <h5> {obj.node.excerpt} </h5>\n                               <p>  {obj.node.frontmatter.date} </p> \n                            </div>\n                      }\n              )\n  return (\n      <div>\n        <Header textHeader=\"MarkDown\"/>\n        <h1>Consuming data from markDown files throught GraphQl</h1>\n          <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n          {items}\n      </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n          html\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {Link} from 'gatsby'\nimport './Header.css'\n\nfunction Header(props){\n return(\n  <div id=\"header\">\n     <h1>{ props.textHeader } </h1>\n     <Link className=\"link\" to=\"/\">Index    </Link>\n     <Link className=\"link\" to=\"/about\">About</Link>\n     <Link className=\"link\" to=\"/contact\">Contact</Link>\n     <Link className=\"link\" to=\"/pandas\">Pandas</Link>\n     <Link className=\"link\" to=\"/graphql\">Graphql</Link>\n     <Link className=\"link\" to=\"/myfiles\">My Files</Link>\n     <Link className=\"link\" to=\"/seeMD\">See MarkDowns</Link>\n     <Link className=\"link\" to=\"/miMarkDown\">MarkDown Page</Link>\n  </div>\n )\n}\n\nexport default Header;"],"sourceRoot":""}